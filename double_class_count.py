from itertools import groupby

# Dataset fornecido
data = [{'id': 1, 'quantity': 4, 'duration': 50, 'teacher': {'id': 1, 'name': 'Clidenor', 'email': 'clidenor@iftm.com'}, 'subject': {'id': 1, 'name': 'Principios de comunicação', 'period': 6}, 'classroom': {'id': 1, 'name': '302', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 3, 'day': 0}, {'id': 1, 'quantity': 4, 'duration': 50, 'teacher': {'id': 1, 'name': 'Clidenor', 'email': 'clidenor@iftm.com'}, 'subject': {'id': 1, 'name': 'Principios de comunicação', 'period': 6}, 'classroom': {'id': 1, 'name': '302', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 2, 'day': 4}, {'id': 1, 'quantity': 4, 'duration': 50, 'teacher': {'id': 1, 'name': 'Clidenor', 'email': 'clidenor@iftm.com'}, 'subject': {'id': 1, 'name': 'Principios de comunicação', 'period': 6}, 'classroom': {'id': 1, 'name': '302', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 4, 'day': 0}, {'id': 1, 'quantity': 4, 'duration': 50, 'teacher': {'id': 1, 'name': 'Clidenor', 'email': 'clidenor@iftm.com'}, 'subject': {'id': 1, 'name': 'Principios de comunicação', 'period': 6}, 'classroom': {'id': 1, 'name': '302', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 3, 'day': 4}, {'id': 2, 'quantity': 4, 'duration': 50, 'teacher': {'id': 2, 'name': 'Mauro', 'email': 'mauro@iftm.com'}, 'subject': {'id': 2, 'name': 'Engenharia de software', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 3, 'day': 4}, {'id': 2, 'quantity': 4, 'duration': 50, 'teacher': {'id': 2, 'name': 'Mauro', 'email': 'mauro@iftm.com'}, 'subject': {'id': 2, 'name': 'Engenharia de software', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 9, 'day': 3}, {'id': 2, 'quantity': 4, 'duration': 50, 'teacher': {'id': 2, 'name': 'Mauro', 'email': 'mauro@iftm.com'}, 'subject': {'id': 2, 'name': 'Engenharia de software', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 0, 'day': 0}, {'id': 2, 'quantity': 4, 'duration': 50, 'teacher': {'id': 2, 'name': 'Mauro', 'email': 'mauro@iftm.com'}, 'subject': {'id': 2, 'name': 'Engenharia de software', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 8, 'day': 3}, {'id': 3, 'quantity': 5, 'duration': 50, 'teacher': {'id': 3, 'name': 'Orbolato', 'email': 'orbolato@iftm.com'}, 'subject': {'id': 3, 'name': 'Programação web II', 'period': 6}, 'classroom': {'id': 3, 'name': '304', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 5, 'day': 0}, {'id': 3, 'quantity': 5, 'duration': 50, 'teacher': {'id': 3, 'name': 'Orbolato', 'email': 'orbolato@iftm.com'}, 'subject': {'id': 3, 'name': 'Programação web II', 'period': 6}, 'classroom': {'id': 3, 'name': '304', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 3, 'day': 3}, {'id': 3, 'quantity': 5, 'duration': 50, 'teacher': {'id': 3, 'name': 'Orbolato', 'email': 'orbolato@iftm.com'}, 'subject': {'id': 3, 'name': 'Programação web II', 'period': 6}, 'classroom': {'id': 3, 'name': '304', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 2, 'day': 3}, {'id': 3, 'quantity': 5, 'duration': 50, 'teacher': {'id': 3, 'name': 'Orbolato', 'email': 'orbolato@iftm.com'}, 'subject': {'id': 3, 'name': 'Programação web II', 'period': 6}, 'classroom': {'id': 3, 'name': '304', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 1, 'day': 3}, {'id': 3, 'quantity': 5, 'duration': 50, 'teacher': {'id': 3, 'name': 'Orbolato', 'email': 'orbolato@iftm.com'}, 'subject': {'id': 3, 'name': 'Programação web II', 'period': 6}, 'classroom': {'id': 3, 'name': '304', 'building': 'BLOCO 3', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 4, 'day': 0}, {'id': 4, 'quantity': 4, 'duration': 50, 'teacher': {'id': 4, 'name': 'Bruno', 'email': 'bruno@iftm.com'}, 'subject': {'id': 4, 'name': 'Sistemas de Controle', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 8, 'day': 4}, {'id': 4, 'quantity': 4, 'duration': 50, 'teacher': {'id': 4, 'name': 'Bruno', 'email': 'bruno@iftm.com'}, 'subject': {'id': 4, 'name': 'Sistemas de Controle', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 8, 'day': 4}, {'id': 4, 'quantity': 4, 'duration': 50, 'teacher': {'id': 4, 'name': 'Bruno', 'email': 'bruno@iftm.com'}, 'subject': {'id': 4, 'name': 'Sistemas de Controle', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 7, 'day': 4}, {'id': 4, 'quantity': 4, 'duration': 50, 'teacher': {'id': 4, 'name': 'Bruno', 'email': 'bruno@iftm.com'}, 'subject': {'id': 4, 'name': 'Sistemas de Controle', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 9, 'day': 4}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 9, 'day': 3}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 5, 'day': 3}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 10, 'day': 3}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 9, 'day': 4}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 10, 'day': 4}, {'id': 5, 'quantity': 6, 'duration': 50, 'teacher': {'id': 5, 'name': 'Robson', 'email': 'robson@iftm.com'}, 'subject': {'id': 5, 'name': 'Micropocessadores e microcontroladores', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 4, 'day': 3}, {'id': 6, 'quantity': 1, 'duration': 50, 'teacher': {'id': 6, 'name': 'Gustavo', 'email': 'gustavo@iftm.com'}, 'subject': {'id': 6, 'name': 'Projetos interdisciplinares VI', 'period': 6}, 'classroom': {'id': 2, 'name': '405', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 9, 'day': 2}, {'id': 7, 'quantity': 2, 'duration': 50, 'teacher': {'id': 7, 'name': 'Anderson', 'email': 'anderson@iftm.com'}, 'subject': {'id': 7, 'name': 'Mecaninca dos materiais', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 7, 'day': 1}, {'id': 7, 'quantity': 2, 'duration': 50, 'teacher': {'id': 7, 'name': 'Anderson', 'email': 'anderson@iftm.com'}, 'subject': {'id': 7, 'name': 'Mecaninca dos materiais', 'period': 6}, 'classroom': {'id': 4, 'name': '401', 'building': 'BLOCO 4', 'capacity': 30}, 'course': {'id': 1, 'name': 'Engenharia de computação', 'shift': 'Integral'}, 'class': {'id': 1, 'name': 'Engenharia de computação', 'period': '6', 'quantity_students': 10}, 'schedule': 5, 'day': 4}]


# Função auxiliar para verificar se os números são sequenciais
def are_sequential(values):
    return all(values[i] + 1 == values[i + 1] for i in range(len(values) - 1))


# Agrupando por 'id' e 'day'
grouped_data = {}
for obj in data:
    key = (obj['id'], obj['day'])
    grouped_data.setdefault(key, []).append(obj)

# Processar cada grupo
sequential_groups = []
for (id_, day), items in grouped_data.items():
    # Ordenar por 'schedule'
    items.sort(key=lambda x: x['schedule'])
    schedules = [item['schedule'] for item in items]

    # Verificar sequências
    temp_group = []
    for i in range(len(schedules) - 1):
        if schedules[i] + 1 == schedules[i + 1]:
            if not temp_group:
                temp_group.append(items[i])
            temp_group.append(items[i + 1])
        else:
            if temp_group:
                sequential_groups.append(temp_group)
                temp_group = []
    if temp_group:
        sequential_groups.append(temp_group)

# Resultado
for group in sequential_groups:
    print("Grupo sequencial encontrado:")
    for obj in group:
        print(obj)